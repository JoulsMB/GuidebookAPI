plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT' apply false
    id 'net.neoforged.gradle.userdev' version '7.0.120' apply false
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT' apply false

    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
}

group = "de.wonejo.gapi"
version = "${mc_version}-${mod_version}"

subprojects.forEach {

    it.group = "${rootProject.group}"
    it.version = "${rootProject.version}"

    it.tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release.set(JavaLanguageVersion.of(21).asInt())
    }

    it.tasks.withType(ProcessResources).configureEach {
        def replacedProperties = [
                mc_version: mc_version, pack_format: pack_format_version,
                mod_id: mod_id, mod_version: mod_version, mod_name: mod_name, mod_authors: mod_authors, mod_description: mod_description, mod_license: mod_license,
                fabric_loader_range: fabric_loader_version, fabric_api_version: fabric_version,
                neo_version: neo_version, neo_version_range: neo_version_range, neo_loader_range: neo_loader_version_range
        ]
        inputs.properties replacedProperties

        filesMatching(["pack.mcmeta", "META-INF/neoforge.mods.toml", "fabric.mods.json"]) {
            expand replacedProperties + [project: project]
        }
    }

    it.tasks.withType(AbstractArchiveTask).configureEach {
        setPreserveFileTimestamps(false)
        setReproducibleFileOrder(true)
    }
}