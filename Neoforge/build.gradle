plugins {
    id 'net.neoforged.gradle.userdev' version '7.0.74'
    id 'me.shedaniel.unified-publishing' version '0.1.+'
}

group = "${mod_group}"
version = "${mod_version}"

base {
    archivesName = "${mod_id}-${mc_version}-neoforge"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

configurations {
    libraries
    implementation.extendsFrom libraries
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    compileOnly project(":CommonAPI")
}

subsystems {
    parchment {
        minecraftVersion = "${mc_version}"

        mappingsVersion = "${parchmentVersion}"
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }
    client {
        dependencies {
            runtime project(":CommonAPI")
        }
    }
}

unifiedPublishing {
    project {
        displayName = 'guidebookapi-neoforge'
        version = "${mod_version}"
        releaseType = 'release'
        gameVersions = ['1.20.2']
        gameLoaders = ['neoforge']

        curseforge {
            token = project.curseforgeToken
            id = project.curseforgeProjectId

            displayName = "guidebookapi-neoforge-${mod_version}"
            version = "${mod_version}"
            changelog = "Finish client and common configurations"
            releaseType = 'release'
            gameVersions = ['1.20.2']
            gameLoaders = ['neoforge']

            mainPublication tasks.jar
        }
    }
}

tasks.named("jar", Jar).configure {
    from project(":CommonAPI").sourceSets.main.output

    manifest {
        attributes([
                'Specification-Title': "${mod_id}",
                'Specification-Vendor': "${mod_authors}",
                'Specification-Version': 1,
                'Implementation-Title': "${mod_id}-neoforge",
                'Implementation-Version': "${project.mod_version}",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}